import { Injectable } from '@angular/core';
import { Http, Response } from '@angular/http';
import { Observable } from 'rxjs/Rx';
import 'rxjs/Rx';
import { Vulnerability } from './vulnerability';

@Injectable()
export class VulnerabilityService{
  constructor(private _http : Http){}
  private baseUrl: string = 'http://localhost:8000';

  getAll(): Observable<Vulnerability[]>{
    let vulns$ = this._http
    .get(`${this.baseUrl}/vulns`)
    .map(mapVulnerabilities);
    var tmp = this._http.get(`${this.baseUrl}/vulns`);

    console.log(vulns$,'huhu');
    //return vulns$;


    return[
      {name: 'vuln 1', desc: 'huhu vuln1', url: 'http://google.com', severity: 4, plugin: 1, id: 123, state: 2},
      {name: 'vuln 2', desc: 'huhu vuln2', url: 'http://google.de', severity: 3, plugin: 2, id: 124, state: 1},
      {name: 'vuln 3', desc: 'huhu vuln3', url: 'http://google.it', severity: 3, plugin: 2, id: 125, state: 2},
    ];

  }

}

function mapVulnerabilities(response:Response): Vulnerability[]{
   console.log('hier',response,Vulnerability);
   console.log(response.json().map(toVuln));
   alert('ich werde aufgerufen');



   return response.json().map(toVuln);
   //return true;
}

function toVuln(r:any): Vulnerability{
  alert('ich werde aufgerufen');
  console.log('Raw data:', r);
  let vuln = <Vulnerability>({
    id: r.id,
    url: 'foo',
    name: 'bar',
  });

  console.log('Parsed vuln:', vuln);
  return vuln;
}
